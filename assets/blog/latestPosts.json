[{"id":9,"titleDE":"BPM Detector V1.1.0","titleEN":"BPM Detector V1.1.0","descDE":"Update auf Version 1.1.0","descEN":"Update to version 1.1.0","date":"2021-09-30T14:34:08.700Z","contentDE":"Das erste Update des BPM Detectors bietet einige Neuerungen f√ºr gratis Benutzer und f√ºr den in App Kauf. Es gibt eine neue Einstellung f√ºr die Genauigkeit der BPM Berechnung. Des Weiteren sind neue Funktionen zur App Individualisierung verf√ºgbar, inklusive eines Einhorn-Modus ü¶Ñ.  \nDie App ist jetzt zus√§tzlich zu Englisch auch in der Deutschen Sprache verf√ºgbar.\n\n![App IMG](/assets/img/blog/0009/1.png)\n\n# Changelog 1.1.0\n30.09.2021\n<br>\n<br>\n- **Gratis Funktionen**\n- Genauigkeitseinstellung hinzugef√ºgt\n- Deutsche Sprache hinzugef√ºgt\n<br><br>\n- **In App Kauf Funktionen**\n- Zuf√§llige BPM Text Farbe\n- Zuf√§llige Hintergrundfarbe\n- Einhorn-Modus ü¶Ñ\n\n\n<br>\n\n## Links\n- Projekt: [BPM Tapper](/bpmdetector)\n- [App Store](https://apps.apple.com/app/bpm-detector/id1586439275)","contentEN":"The first BPM detector update brings a couple of new features for free and in app purchase users.  A new setting is added to tweak the accuracy of the BPM calculation. New settings for more app individualization were also added, including a unicorn mode ü¶Ñ.  \nThe app is now also available in German.\n\n\n![App IMG](/assets/img/blog/0009/1.png)\n\n\n# Changelog 1.1.0\n30.09.2021\n<br>\n<br>\n- **Free features**\n- Added accuracy setting\n- Added German translation\n<br><br>\n- **In App Purchase features**\n- Random BPM color on tap\n- Random Background color on tap\n- Unicorn mode ü¶Ñ\n\n\n<br>\n\n## Links\n- Project: [BPM detector](/bpmdetector)\n- [App Store](https://apps.apple.com/app/bpm-detector/id1586439275)","tags":["iOS"," App"," SwiftUI"],"projects":[]},{"id":8,"titleDE":"BPM Detector V1.0.0","titleEN":"BPM Detector V1.0.0","descDE":"Erstver√∂ffentlichung im App Store","descEN":"Initial App Store release","date":"2021-09-20T14:34:08.700Z","contentDE":"Nach vielen he¬≠r¬≠um¬≠pro¬≠bie¬≠ren mit Swift und SwiftUI habe ich heute meine erste App im Apple App Store ver√∂ffentlicht.  \nDer BPM Detector ist eine App zum Erkennen der BPM (Beats pro Minute) eines Liedes √ºber das Tippen eines Buttons in der App im Takt des Liedes.  \nDamit die App nicht zu simpel und langweilig ist, gibt es Statistiken und einen in App Kauf, um das Design der App anpassen zu k√∂nnen. Auf [Projektseite](/projects/6) findet sich noch mehr Informationen √ºber die App.\n\n![App IMG](/assets/img/blog/0008/1.png)\n\n# Changelog 1.0.0\n20.09.2021\n<br>\n<br>\n- Erster App Store Release\n<br><br>\n- **Gratis Funktionen**\n- Tippen zur BPM Erkennung\n- Basis Schwarz/Wei√ü Design\n- Keine Designindividualisierung\n- Statistiken:\n- _Takte getippt_\n- _Durchschnittliche  BPM_\n- _H√∂chste BPM_\n<br><br>\n- **In App Kauf Funktionen**\n- Hintergundfarbe\n- BPM Farbe\n- Tap Button Farbe\n- Tap Button Text Farbe\n- Zuf√§llige Button Farbe\n\n\n<br>\n\n## Links\n- Projekt: [BPM Tapper](/bpmdetector)\n- [App Store](https://apps.apple.com/app/bpm-detector/id1586439275)","contentEN":"After playing around with Swift and SwiftUI for a while, I published my first app on the Apple App Store today.  \nThe BPM Detector is an app for the detecting the BPM (beats per minute) of a song, by tapping a button in sync with the beat of a song. To not only publish an app with only this single feature, I added statistics and an in app purchase to customize the look of the app.  \nYou can find more information about the app on the [project page](/projects/6).\n\n![App IMG](/assets/img/blog/0008/1.png)\n\n# Changelog 1.0.0\n20.09.2021\n<br>\n<br>\n- First App Store release \n<br><br>\n- **Free features**\n- Tap for BPM\n- Basic black & white theme\n- No customizations\n- Statistics:\n- _Total Taps_\n- _Average BPM_\n- _Highest BPM_\n<br><br>\n- **In App Purchase features**\n- Background color\n- BPM color\n- Tap button color\n- Tap button text color\n- Random tap button color on tap\n\n\n<br>\n\n## Links\n- Project: [BPM detector](/bpmdetector)\n- [App Store](https://apps.apple.com/app/bpm-detector/id1586439275)","tags":["iOS"," App"," SwiftUI"],"projects":[]},{"id":4,"titleDE":"Mein Mac Entwickler setup","titleEN":"My Mac developer setup","descDE":"Welche Entwicklertools kommen bei mir als erstes auf einen neuen Mac","descEN":"Which developer tools I install first on a new Mac","date":"2020-09-10T00:00:00.700Z","contentDE":"Bei einem neuen, oder neu aufgesetzten Mac m√ºssen nat√ºrlich als erstes alle Entwicklertools installiert werden.  \nFangen wir direkt mit der Liste der Tools, die ich verwende an. Danach gibt es noch Tipps und Terminalbefehle zur einfachen Installation.  \n<br>\n\n## Terminal\n- brew\n- iTerm2\n- ohmyzsh\n- Powerlevel10k\n\n<br>  \n\n## Entwicklertools\n- PHP\n- Composer\n- Laravel\n- Redis\n- NodeJS\n- Angular\n- JetBrains Toolbox\n- Fork (git client)\n- LanScan\n- Docker\n- Atom\n- Insomnia\n- draw.io\n- MacDown\n\n<br>\n\n## Tools\n- Alfred\n- Magnet\n- Firefox\n- Spotify\n\n<br>\n\n# Setup\n## brew  \n[Webseite](https://brew.sh)  \n\nDer Paketmanager f√ºr macOS. Mit brew werden wir die meisten weitern Tools installieren.\n\n``` bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n```  \n\n<br>\n\n## iTerm  \n[Webseite](https://iterm2.com)  \n\nMein Lieblingsterminal (Geschmacksache)\n\n```bash\nbrew install --cask iterm2\n```\n\n<br>\n\n## ohmyzsh\n[Webseite](https://ohmyz.sh/)  \n\nFramework f√ºr ZSH Konfiguration\n\n```bash\nsh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n<br>\n\n## Powerlevel10k & zsh Tweaks \n<br>\n\n### Powerlevel10k\n[Webseite](https://github.com/romkatv/powerlevel10k)  \n\nRepository klonen:\n\n```bash\ngit clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k\n```\n\nZsh `~/.zshrc` Konfiguration editieren und als ZSH_THEME folgendes setzen: `ZSH_THEME=\"powerlevel10k/powerlevel10k\"`\n\nDanach eine neue Terminal Session starten damit die √Ñnderungen angenommen werden.\nIn dieser neuen Session kann powerlevel10k konfiguriert werden. Die Konfiguration kann mit dem Befehl `p10k configure` erneut gestartet werden.\n\n<br>\n\n### Natural Text Editing\nDamit man in iTerm wie gewohnt mit option/alt + ‚Üí oder ‚Üê √ºber W√∂rter springen kann, ist es notwendig das in den Einstellungen zu aktivieren.  \n\n<br>\n\niTerm->Preferences...->Profiles->Keys->Presets...->Natural Text Editing\n\n<br>\n\n### zsh syntax highlighting\nInstallation:  \n```bash\nbrew install zsh-syntax-highlighting\n```\n\nKonfiguartion von `~/.zshrc` anpassen und folgendes ans Ende der Datei anf√ºgen:  \n`source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n![zsh-syntax-highlighting](/assets/img/blog/0004/zsh-syntax-highlighting.png)\n\n\n<br>\n\n### zsh autosuggestions\nInstallation:\n```bash\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n```\n\nKonfiguartion von `~/.zshrc` anpassen und `zsh-autosuggestions` zu Plugins hinzuf√ºgen:  \n`plugins=(zsh-autosuggestions)` \n\n![zsh-syntax-highlighting](/assets/img/blog/0004/zsh-autosuggestions.png)\n\n<br>\n\n## PHP\n[Webseite](https://www.php.net)  \n\n```bash\nbrew install php\n```\n\n<br>\n\n## Composer\n[Webseite](https://getcomposer.org/)  \n\n```bash\nbrew install composer\n```\n\n<br>\n\n## Laravel\n[Webseite](https://laravel.com/)  \n\nBen√∂tig Composer (siehe oben zum installieren)\n\n```bash\ncomposer global require \"laravel/installer\"\n```\n\n### Laravel zum macOS path hinzuf√ºgen\n\n`~/.bash_profile` editieren:  \n\n```\nnano ~/.bash_profile\n```\n\nFalls zsh verwendet wird `~/.zshrc` editieren:\n\n```\nnano ~/.zshrc\n```\n\nIn beiden F√§llen die folgende Zeile ans Ende hinzuf√ºgen und speichern:  \n\n```\nexport PATH=\"$PATH:$HOME/.composer/vendor/bin\"\n```\n\nNeue Terminal Sessions starten.\n\n### Neues Laravel Projekt erzeugen\n\n```\nlaravel new [project name]\n```\n\n<br>\n\n## Redis\n[Webseite](https://redis.io/)\n\n<br>\n\n### Redis installieren\n```bash\nbrew install redis\n```\n\n<br>\n\n### Redis als vordergund Prozess starten\n\n```bash\nredis-server\n```\n\n<br>\n\n### Redis Service Kommandos\n\nNormalerweise **port 6379**  \n\n<br>\n\n**Start Redis Service**\n\n```bash\nbrew services start redis\n```\n\n**Stop Redis Service**\n\n```bash\nbrew services stop redis\n```\n\n**Restart Redis Service**\n\n```bash\nbrew services restart redis\n```\n\n<br>\n\n## NodeJS\n[Webseite](https://nodejs.org)  \n\nInstalliert die latest Version von `node` und `npm`. Das ist __nicht__ die LTS Version!\n\n```bash\nbrew install node\n```\n\nUm die LTS Version zu installieren m√ºssen wir die auf der NodeJS Webseite raussuchen und mit folgendem Befehl installieren. Dabei muss __X__ mit der Major Version der LTS ersetzt werden. z.B. `node@12`\n\n```bash\nbrew install node@X\n```\n\nUm zwischen verschieden NodeJS Versionen zu wechseln sind die folgenden Befehle notwendig:\n\n```bash\n# Verkn√ºpfungen auf aktuelle Version entfernen\nbrew unlink node\n\n# Gew√ºnschte Version installieren\nbrew install node@X\n\n# Gew√ºnschte Version linken\nbrew link node@X\n\n# Testen ob alles geklappt hat\nnode --version\n```\n\n<br>\n\n## Angular\n[Webseite](https://angular.io)\n```bash\nnpm install -g @angular/cli\n```\n\n<br>\n\n## JetBrains Toolbox\n[Webseite](https://www.jetbrains.com/toolbox-app/)\n\nJetBrains Toolbox lebt in der Men√ºleiste auf dem Mac. Mit diesem Tool lassen sich alle JetBrains Programme einfach installieren und updaten. Zus√§tzlich gibt es eine √úbersicht √ºber die zuletzt ge√∂ffneten Projekte in allen JetBrains IDEs und √∂ffnet diese in der korrekten IDE.\n\n![jetbrains toolbox](/assets/img/blog/0004/toolbox.png)\n\n```bash\nbrew install --cask jetbrains-toolbox\n```\n\n<br>\n\n## Fork\n[Webseite](https://git-fork.com)  \n\nSch√∂ner und √ºbersichtlicher git client f√ºr Windows und Mac.\n\n```bash\nbrew install --cask fork\n```\n\n<br>\n\n## LanScan\n[Webseite](https://apps.apple.com/de/app/lanscan/id472226235?mt=12)  \n\nKleines Tool zum scannen des LAN. Download im App Store.  \n\n![lanscan](/assets/img/blog/0004/lanscan.png)\n\n<br>\n\n## Docker\n[Webseite](https://www.docker.com/)  \n\n```bash\nbrew install --cask docker\n```\n\n<br>\n\n## Atom\n[Webseite](https://atom.io/)  \n\nPraktischer schlanker Texteditor mit riesigen Erweiterungsm√∂glichkeiten durch unz√§hlige Plugins. Gut zum Editieren von Textdateien, ohne extra eine gro√üe IDE starten zu m√ºssen.\n\n```bash\nbrew install --cask atom\n```\n\n<br>\n\n## Insomnia\n[Webseite](https://insomnia.rest)  \n\nInsomnia ist ein HTTP request Tool f√ºr REST APIs √§hnlich Postman.\n\n```bash\nbrew install --cask insomnia\n```\n\n<br>\n\n## draw.io\n[Webseite](https://drawio-app.com/)  \n\nPraktisches Tool zum Zeichnen von Klassen- bis ER-Diagrammen.  \n\n```bash\nbrew install --cask drawio\n```\n\n<br>\n\n## MacDown\n[Webseite](https://macdown.uranusjr.com)  \n\nMarkdown editor.  \n\n```bash\nbrew install --cask macdown\n```\n\n<br>\n\n## Alfred\n[Webseite](https://www.alfredapp.com)  \n\nSpotlight alternative mit mehr Funktionen\n\n```bash\nbrew install --cask alfred\n```\n\n<br>\n\n## Magnet\n[Webseite](https://apps.apple.com/de/app/magnet/id441258766?mt=12) 3,99‚Ç¨ - Download im Mac App Store  \n<br>\nMagnet lebt in der Men√ºleiste von macOS und erweitert die Fenster Management Funktionen von macOS. Besonders gefallen mir bei Magnet die Shortcuts und die M√∂glichkeit meinen Bildschirm sowohl halbieren als auch dritteln zu k√∂nnen.  \nEs gibt einige dieser Tools, darunter auch einginge kostenlose. Da ich mich inzwischen aber an die Shortcuts von Magnet gew√∂hnt habe sind es mir die 3,99‚Ç¨ wert.\n\n![magnet](/assets/img/blog/0004/magnet.png)\n\n<br>\n\n## Firefox\n[Webseite](https://www.mozilla.org/de/firefox/new/)  \n\n```bash\nbrew install --cask firefox\n```\n\n<br>\n\n## Spotify (Zur Motivation)\n[Webseite](https://www.spotify.com)  \n\n```bash\nbrew install --cask spotify\n```\n","contentEN":" If you got a new Mac or reset your current one you need to reinstall all the developer tools. Here is the list of the tools I use, followed by tipps and terminal commands for an easy installation process.  \n<br>\n\n## Terminal\n- brew\n- iTerm2\n- ohmyzsh\n- Powerlevel10k\n\n<br>  \n\n## Developer tools\n- PHP\n- Composer\n- Laravel\n- Redis\n- NodeJS\n- Angular\n- JetBrains Toolbox\n- Fork (git client)\n- LanScan\n- Docker\n- Atom\n- Insomnia\n- draw.io\n- MacDown\n\n<br>\n\n## Tools\n- Alfred\n- Magnet\n- Firefox\n- Spotify\n\n<br>\n\n# Setup\n## brew  \n[Webpage](https://brew.sh)  \n\nThe package manager for macOS. We will use it to install almost all other tools.  \n\n``` bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n```  \n\n<br>\n\n## iTerm  \n[Webpage](https://iterm2.com)  \n\nMy favorite terminal\n\n```bash\nbrew install --cask iterm2\n```\n\n<br>\n\n## ohmyzsh\n[Webpage](https://ohmyz.sh/)  \n\nFramework for ZSH configuration\n\n```bash\nsh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n<br>\n\n## Powerlevel10k & zsh Tweaks \n<br>\n\n### Powerlevel10k\n[Webpage](https://github.com/romkatv/powerlevel10k)  \n\nclone repository:\n\n```bash\ngit clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k\n```\n\nEdit zsh `~/.zshrc` config and set the following for ZSH_THEME: `ZSH_THEME=\"powerlevel10k/powerlevel10k\"`\n\nStart a new terminal session the apply the changes.\nYou will be prompted to configure powerlevel10k in the new session. The configuration can be run again using the command `p10k configure`.\n\n<br>\n\n### Natural Text Editing\nTo be able to move in text via option/alt + ‚Üí or ‚Üê by jumping over words, it is necessary to set the following setting in iterm:  \n\n<br>\n\niTerm->Preferences...->Profiles->Keys->Presets...->Natural Text Editing\n\n<br>\n\n### zsh syntax highlighting\nInstallation:  \n```bash\nbrew install zsh-syntax-highlighting\n```\n\nEdit `~/.zshrc` and add the following line at the end of the file:  \n`source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n![zsh-syntax-highlighting](/assets/img/blog/0004/zsh-syntax-highlighting.png)\n\n\n<br>\n\n### zsh autosuggestions\nInstallation:\n```bash\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n```\n\nEdit `~/.zshrc` and add `zsh-autosuggestions` to plugins:  \n`plugins=(zsh-autosuggestions)` \n\n![zsh-syntax-highlighting](/assets/img/blog/0004/zsh-autosuggestions.png)\n\n<br>\n\n## PHP\n[Webpage](https://www.php.net)  \n\nInstallation:\n\n```bash\nbrew install php\n```\n\n<br>\n\n## Composer\n[Webpage](https://getcomposer.org/)  \n\nInstallation:\n\n```bash\nbrew install composer\n```\n\n<br>\n\n## Laravel\n[Webpage](https://laravel.com/)  \n\nRequires Composer (see above for installation)\n\n```bash\ncomposer global require \"laravel/installer\"\n```\n\n### Add Laravel to macOS path\n\nEdit `~/.bash_profile`:  \n\n```\nnano ~/.bash_profile\n```\n\nIf zsh is used edit `~/.zshrc`:\n\n```\nnano ~/.zshrc\n```\n\nIn both cases add the following line at the end of the file:  \n\n```\nexport PATH=\"$PATH:$HOME/.composer/vendor/bin\"\n```\n\nStart a new terminal session.\n\n### Create new Laravel Project\n\n```\nlaravel new [project name]\n```\n\n<br>\n\n## Redis\n[Webseite](https://redis.io/)\n\n<br>\n\n### Install Redis\n```bash\nbrew install redis\n```\n\n<br>\n\n### Run Redis as foreground process\n\n```bash\nredis-server\n```\n\n<br>\n\n### Redis service commands\n\nUsually uses **port 6379**  \n\n<br>\n\n**Start Redis service**\n\n```bash\nbrew services start redis\n```\n\n**Stop Redis service**\n\n```bash\nbrew services stop redis\n```\n\n**Restart Redis service**\n\n```bash\nbrew services restart redis\n```\n\n<br>\n\n## NodeJS\n[Webpage](https://nodejs.org)  \n\nInstalls the latest version of `node` and `npm`. This is __not__ the LTS version!\n\n```bash\nbrew install node\n```\n\nTo install the LTS version check the NodeJS [Webpage](https://nodejs.org) for the correct version. Install this version with the following command. The __X__ must be replaced with the major version of the LTS release. e.g. `node@12`\n\n```bash\nbrew install node@X\n```\n\nTo switch between different NodeJS versions use the following commands:  \n\n```bash\n# Unlink current version\nbrew unlink node\n\n# Install new version\nbrew install node@X\n\n# Link new version\nbrew link node@X\n\n# Test if it worked\nnode --version\n```\n\n<br>\n\n## Angular\n[Webpage](https://angular.io)\n\nInstallation\n\n```bash\nnpm install -g @angular/cli\n```\n\n<br>\n\n## JetBrains Toolbox\n[Webpage](https://www.jetbrains.com/toolbox-app/)\n\nJetBrains Toolbox lives in the macOS menu bar. This tool can easily install, switch between versions and update all JetBrains tools. Additionally, it shows an overview of the last used projects in all IDEs and lets you open them from one place in the correct IDE with one click.  \n\n![jetbrains toolbox](/assets/img/blog/0004/toolbox.png)\n\n```bash\nbrew install --cask jetbrains-toolbox\n```\n\n<br>\n\n## Fork\n[Webpage](https://git-fork.com)  \n\nNice to look at and fully featured git client.\n\n```bash\nbrew install --cask fork\n```\n\n<br>\n\n## LanScan\n[Webpage](https://apps.apple.com/de/app/lanscan/id472226235?mt=12)  \n\nSmall tool to scan your LAN for devices. Download from the App Store.  \n\n![lanscan](/assets/img/blog/0004/lanscan.png)\n\n<br>\n\n## Docker\n[Webpage](https://www.docker.com/)  \n\n```bash\nbrew install --cask docker\n```\n\n<br>\n\n## Atom\n[Webpage](https://atom.io/)  \n\nLightweight text edit tool with huge potential expansion options through plugins. Nice to edit textfiles without the need to boot a whole IDE.  \n\n```bash\nbrew install --cask atom\n```\n\n<br>\n\n## Insomnia\n[Webpage](https://insomnia.rest)  \n\nHTTP request tool for REST APIs. Similar to Postman.  \n\n```bash\nbrew install --cask insomnia\n```\n\n<br>\n\n## draw.io\n[Webpage](https://drawio-app.com/)  \n\nTool for drawing all kinds of diagrams.  \n\n```bash\nbrew install --cask drawio\n```\n\n<br>\n\n## MacDown\n[Webpage](https://macdown.uranusjr.com)  \n\nMarkdown editor.\n\n```bash\nbrew install --cask macdown\n```\n\n<br>\n\n## Alfred\n[Webpage](https://www.alfredapp.com)  \n\nSpotlight alternative with more features.\n\n```bash\nbrew install --cask alfred\n```\n\n<br>\n\n## Magnet\n[Webpage](https://apps.apple.com/de/app/magnet/id441258766?mt=12) 3,99‚Ç¨ - Download in Mac App Store  \n<br>\nMagnet lives in the masOS menu bar and expands the window management functionality of macOS. I really like the shortcuts and the ability to not only divide my desktop by half but also by thirds.  \n\n![magnet](/assets/img/blog/0004/magnet.png)\n\n<br>\n\n## Firefox\n[Webpage](https://www.mozilla.org/de/firefox/new/)  \n\n```bash\nbrew install --cask firefox\n```\n\n<br>\n\n## Spotify (For motivation)\n[Webpage](https://www.spotify.com)  \n\n```bash\nbrew install --cask spotify\n```\n","tags":["Mac","macOS","Tools","Setup"],"projects":[]}]